
#-------- Path Settings ---------

if $(OS) = NT {
	SEP = \\ ;
} else {
	SEP = / ;
}

HDRS = . kit ;

#------------------------
#Rules to support building objects into 'objs/' directory and executables into 'dist/' directory.

rule MySubDir $(1) {
	SubDir $(1) ;
	if $(LOCATE_TARGET) = . {
		LOCATE_TARGET = objs ;
	} else {
		LOCATE_TARGET = objs$(SEP)$(SUBDIR) ;
	}
}

rule MyObjects {
	for FILE in $(1:S=$(SUFOBJ)) {
		Depends $(FILE:D=$(LOCATE_TARGET):S=$(SUFOBJ)) : $(FILE:G=$(SOURCE_GRIST)) ;
	}
	Objects $(1) ;
}

rule MyMainFromObjects $(1) : $(2) {
	local LOCATE_TARGET = dist ;
	MainFromObjects $(1) : $(2) ;
}

#-------- Per-OS Compiler Settings ----------

if $(OS) = NT {
	C++FLAGS = /nologo /c /EHsc /W3 /WX /MD /I"kit-libs-win/out/include" /I"kit-libs-win/out/include/SDL2" /I"kit-libs-win/out/libpng"
		#disable a few warnings:
		/wd4146 #-1U is still unsigned
		/wd4297 #unforunately SDLmain is nothrow
	;
	LINKFLAGS = /nologo /SUBSYSTEM:CONSOLE
		/LIBPATH:"kit-libs-win/out/lib"
		/LIBPATH:"kit-libs-win/out/libpng"
		/LIBPATH:"kit-libs-win/out/zlib"
	;
	LINKLIBS = SDL2main.lib SDL2.lib OpenGL32.lib libpng.lib zlib.lib ;

	File dist$(SEP)SDL2.dll : kit-libs-win$(SEP)out$(SEP)dist$(SEP)SDL2.dll ;
#- - - - - - - - - - - - - - - -
} else if $(OS) = MACOSX {
	KIT_LIBS = kit-libs-osx ;
	C++ = clang++ ;
	C++FLAGS =
		-std=c++14 -g -Wall -Werror
		-I$(KIT_LIBS)/libpng/include                           #libpng
		-I$(KIT_LIBS)/glm/include                              #glm
		`PATH=$(KIT_LIBS)/SDL2/bin:$PATH sdl2-config --cflags` #SDL2
		;
	LINK = clang++ ;
	LINKFLAGS = -std=c++14 -g -Wall -Werror ;
	LINKLIBS =
		-L$(KIT_LIBS)/libpng/lib -lpng                      #libpng
		-L$(KIT_LIBS)/zlib/lib -lz                          #zlib
		`PATH=$(KIT_LIBS)/SDL2/bin:$PATH sdl2-config --static-libs` -framework OpenGL #SDL2
		;
#- - - - - - - - - - - - - - - -
} else if $(OS) = LINUX {
	KIT_LIBS = kit-libs-linux ;
	C++ = g++ ;
	C++FLAGS =
		-std=c++11 -g -Wall -Werror
		-I$(KIT_LIBS)/libpng/include                           #libpng
		-I$(KIT_LIBS)/glm/include                              #glm
		`PATH=$(KIT_LIBS)/SDL2/bin:$PATH sdl2-config --cflags` #SDL2
		;
	LINK = g++ ;
	LINKFLAGS = -std=c++11 -g -Wall -Werror ;
	LINKLIBS =
		-L$(KIT_LIBS)/libpng/lib -lpng                      #libpng
		-L$(KIT_LIBS)/zlib/lib -lz                          #zlib
		`PATH=$(KIT_LIBS)/SDL2/bin:$PATH sdl2-config --static-libs` -lGL #SDL2
		;
}

